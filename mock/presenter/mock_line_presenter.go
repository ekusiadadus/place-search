// Code generated by MockGen. DO NOT EDIT.
// Source: usecases/ipresenter/iline_presenter.go

// Package mock_ipresenter is a generated GoMock package.
package mock_ipresenter

import (
	gomock "github.com/golang/mock/gomock"
	favoritedto "github.com/yagi-eng/place-search/usecases/dto/favoritedto"
	searchdto "github.com/yagi-eng/place-search/usecases/dto/searchdto"
	reflect "reflect"
)

// MockILinePresenter is a mock of ILinePresenter interface
type MockILinePresenter struct {
	ctrl     *gomock.Controller
	recorder *MockILinePresenterMockRecorder
}

// MockILinePresenterMockRecorder is the mock recorder for MockILinePresenter
type MockILinePresenterMockRecorder struct {
	mock *MockILinePresenter
}

// NewMockILinePresenter creates a new mock instance
func NewMockILinePresenter(ctrl *gomock.Controller) *MockILinePresenter {
	mock := &MockILinePresenter{ctrl: ctrl}
	mock.recorder = &MockILinePresenterMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockILinePresenter) EXPECT() *MockILinePresenterMockRecorder {
	return m.recorder
}

// AddFavorite mocks base method
func (m *MockILinePresenter) AddFavorite(arg0 favoritedto.AddOutput) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "AddFavorite", arg0)
}

// AddFavorite indicates an expected call of AddFavorite
func (mr *MockILinePresenterMockRecorder) AddFavorite(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "AddFavorite", reflect.TypeOf((*MockILinePresenter)(nil).AddFavorite), arg0)
}

// GetFavorites mocks base method
func (m *MockILinePresenter) GetFavorites(arg0 favoritedto.GetOutput) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "GetFavorites", arg0)
}

// GetFavorites indicates an expected call of GetFavorites
func (mr *MockILinePresenterMockRecorder) GetFavorites(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetFavorites", reflect.TypeOf((*MockILinePresenter)(nil).GetFavorites), arg0)
}

// RemoveFavorite mocks base method
func (m *MockILinePresenter) RemoveFavorite(arg0 favoritedto.RemoveOutput) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "RemoveFavorite", arg0)
}

// RemoveFavorite indicates an expected call of RemoveFavorite
func (mr *MockILinePresenterMockRecorder) RemoveFavorite(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "RemoveFavorite", reflect.TypeOf((*MockILinePresenter)(nil).RemoveFavorite), arg0)
}

// Search mocks base method
func (m *MockILinePresenter) Search(arg0 searchdto.Output) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "Search", arg0)
}

// Search indicates an expected call of Search
func (mr *MockILinePresenterMockRecorder) Search(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Search", reflect.TypeOf((*MockILinePresenter)(nil).Search), arg0)
}
